% B ------------------

@inproceedings{bernardy2015duality
  author    = {Jean-Philippe Bernardy and 
               Josef Svenningsson},
  title     = {On the Duality of Streams.
               How Can Linear Types Help to Solve the Lazy {IO} Problem?},
  booktitle = {IFL: Implementation and Application of Functional Languages},
  year      = {2015}
}


% Scheduling is undecidable in general
@inproceedings{buck1993scheduling,
  title={Scheduling dynamic dataflow graphs with bounded memory using the token flow model},
  author={Buck, Joseph Tobin and Lee, Edward A},
  booktitle={Acoustics, Speech, and Signal Processing, 1993. ICASSP-93., 1993 IEEE International Conference on},
  volume={1},
  pages={429--432},
  year={1993},
  organization={IEEE}
}

% Good comparison of different kinds of dataflow networks.
% Boolean dataflow extends SDF with some sort of control flow.
% Deals with dynamic scheduling
@phdthesis{bouakaz2013real,
  title={Real-time scheduling of dataflow graphs},
  author={Bouakaz, Adnan},
  year={2013},
  school={Universit{\'e} Rennes 1}
}


% C ------------------

% Pull and push arrays in Obsidian
% Here the distinction is made for the purpose of code generation for GPUs rather than fusion, as operations like append on pull arrays require conditionals inside the loop, whereas using push arrays moves these conditionals outside the loop.
@inproceedings{claessen2012expressive,
  author    = {Koen Claessen and
               Mary Sheeran and
               Joel Svensson},
  title     = {Expressive array constructs in an embedded {GPU} kernel programming
               language},
  booktitle = {DAMP: Declarative Aspects of Multicore Programming},
  year      = {2012},
}


% Stream fusion paper, uses pull streams, relies on inlining, cannot do splits
@inproceedings{coutts2007stream,
  title={Stream fusion: From lists to streams to nothing at all},
  author={Coutts, Duncan and Leshchinskiy, Roman and Stewart, Don},
  booktitle={ACM SIGPLAN Notices},
  volume={42},
  number={9},
  pages={315--326},
  year={2007},
  organization={ACM}
}

% F ------------------

% Textbook explanation of polyhedral
@incollection{feautrier2011polyhedron,
  title={Polyhedron model},
  author={Feautrier, Paul and Lengauer, Christian},
  booktitle={Encyclopedia of Parallel Computing},
  pages={1581--1592},
  year={2011},
  publisher={Springer}
}

% Similar work on fusing KPNs but requires a separate schedule to be specified.
% Also uses synchronised product, so unable to fuse cases like (zip xs ys; zip ys xs)
@inproceedings{fradet2004network,
  title={Network fusion},
  author={Fradet, Pascal and Ha, St{\'e}phane Hong Tuan},
  booktitle={Asian Symposium on Programming Languages and Systems},
  pages={21--40},
  year={2004},
  organization={Springer}
}

% G ------------------

% Dynamic scheduling of KPNs across multiple threads.
% Dynamically increase size of FIFO buffers as required.
% Notes that Parks' scheduling algorithm is incorrect in presence of local deadlocks - does not guarantee fairness
@incollection{geilen2003requirements,
  title={Requirements on the execution of Kahn process networks},
  author={Geilen, Marc and Basten, Twan},
  booktitle={Programming languages and systems},
  pages={319--334},
  year={2003},
  publisher={Springer}
}

% Original short-cut fusion paper using foldr/build
% Actually push-based, but inlining is inherently pull-based so ends up with worst of both.
@inproceedings{gill1993short,
  title={A short cut to deforestation},
  author={Gill, Andrew and Launchbury, John and Peyton Jones, Simon L},
  booktitle={Proceedings of the conference on Functional programming languages and computer architecture},
  pages={223--232},
  year={1993},
  organization={ACM}
}

% H ------------------

% J ------------------

@article{johnston2004advances,
  title={Advances in dataflow programming languages},
  author={Johnston, Wesley M and Hanna, JR and Millar, Richard J},
  journal={ACM Computing Surveys (CSUR)},
  volume={36},
  number={1},
  pages={1--34},
  year={2004},
  publisher={ACM}
}

% K ------------------

% The Kahn process network paper
@article{kahn1976coroutines,
  title={Coroutines and networks of parallel processes},
  author={Kahn, Gilles and MacQueen, David and others},
  year={1976}
}

% Describes fundamental difference between push and pull
@inproceedings{kay2009you,
  title={You pull, I'll push: on the polarity of pipelines},
  author={Kay, Michael},
  booktitle={Balisage: The Markup Conference},
  pages={11--14},
  year={2009}
}

% Original iteratees paper? Not sure
@inproceedings{kiselyov2012iteratees,
  title={Iteratees},
  author={Kiselyov, Oleg},
  booktitle={International Symposium on Functional and Logic Programming},
  pages={166--181},
  year={2012},
  organization={Springer}
}

% Pull-based stream fusion with staged computation.
% Uses staged computation to ensure that inlining happens, but this causes duplication of work.
@article{kiselyov2016stream,
  title={Stream fusion, to completeness},
  author={Kiselyov, Oleg and Biboudis, Aggelos and Palladinos, Nick and Smaragdakis, Yannis},
  journal={arXiv preprint arXiv:1612.06668},
  year={2016}
}

% A push-based database query thing. Running example is split, but does not deal with joins.
@article{klonatos2014building,
  title={Building efficient query engines in a high-level language},
  author={Klonatos, Yannis and Koch, Christoph and Rompf, Tiark and Chafi, Hassan},
  journal={Proceedings of the VLDB Endowment},
  volume={7},
  number={10},
  pages={853--864},
  year={2014},
  publisher={VLDB Endowment}
}

% L ------------------

@inproceedings{lippmeier2013data,
  title={Data flow fusion with series expressions in Haskell},
  author={Lippmeier, Ben and Chakravarty, Manuel MT and Keller, Gabriele and Robinson, Amos},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  number={12},
  pages={93--104},
  year={2013},
  organization={ACM}
}

@inproceedings{lippmeier2016polarized,
  title={Polarized data parallel data flow},
  author={Lippmeier, Ben and Mackay, Fil and Robinson, Amos},
  booktitle={Proceedings of the 5th International Workshop on Functional High-Performance Computing},
  pages={52--57},
  year={2016},
  organization={ACM}
}

% M ------------------

% Synchronous dataflow does not allow value-dependent access patterns or appends or....
% Lucy extends this with a boolean clock calculus, but only allows periodic (repeating) clocks with a constant prefix - this cannot express append, merge or filter
@inproceedings{mandel2010lucy,
  title={Lucy-n: a n-synchronous extension of Lustre},
  author={Mandel, Louis and Plateau, Florence and Pouzet, Marc},
  booktitle={Mathematics of Program Construction},
  pages={288--309},
  year={2010},
  organization={Springer}
}

% P ------------------

% Dynamic scheduling with bounded queues, just increase the size of the queue when a deadlock occurs
@phdthesis{parks1995bounded,
  title={Bounded scheduling of process networks},
  author={Parks, Thomas M},
  year={1995},
  school={University of California. Berkeley, California}
}

% R ------------------

% S ------------------

@article{stephens1997survey,
  title={A survey of stream processing},
  author={Stephens, Robert},
  journal={Acta Informatica},
  volume={34},
  number={7},
  pages={491--541},
  year={1997},
  publisher={Springer}
}

% Support both pull and push arrays.
% Rather than supporting arbitrary push arrays, they allow a limited set of combinators which can be easily implemented on push arrays (including those that can't be easily implemented as pull, for example append).
@inproceedings{svensson2014defunctionalizing,
  title={Defunctionalizing push arrays},
  author={Svensson, Bo Joel and Svenningsson, Josef},
  booktitle={Proceedings of the 3rd ACM SIGPLAN workshop on Functional high-performance computing},
  pages={43--52},
  year={2014},
  organization={ACM}
}

% T ------------------

@inproceedings{thies2002streamit,
  title={StreamIt: A language for streaming applications},
  author={Thies, William and Karczmarek, Michal and Amarasinghe, Saman},
  booktitle={Compiler Construction},
  pages={179--196},
  year={2002},
  organization={Springer}
}

@phdthesis{thies2009language,
  title={Language and compiler support for stream programs},
  author={Thies, William},
  year={2009},
  school={Massachusetts Institute of Technology}
}

@inproceedings{turjan2002compile,
  title={A compile time based approach for solving out-of-order communication in Kahn Process Networks},
  author={Turjan, Alexandru and Kienhuis, Bart and Deprettere, Ed},
  booktitle={Application-Specific Systems, Architectures and Processors, 2002. Proceedings. The IEEE International Conference on},
  pages={17--28},
  year={2002},
  organization={IEEE}
}


% Misc ------------------------

@misc{hackage:conduit,
  author = {Michael Snoyman},
  year   = {2011},
  title  = {The conduit {H}askell package},
  note   = {\url{http://hackage.haskell.org/package/conduit}}
}


@misc{hackage:enumerator,
  author = {John Millikin and Mikhail Vorozhtsov},
  year   = {2011},
  title  = {The enumerator {H}askell package},
  note   = {\url{http://hackage.haskell.org/package/enumerator}}
}


@misc{hackage:machines,
  author = {Edward Kmett and RÃºnar Bjarnason and Josh Cough},
  year   = {2012},
  title  = {The machines {H}askell package},
  note   = {\url{http://hackage.haskell.org/package/machines}}
}


@misc{hackage:pipes,
  author = {Gabriel Gonzalez},
  year   = {2012},
  title  = {The pipes {H}askell package},
  note   = {\url{http://hackage.haskell.org/package/pipes}}
}


